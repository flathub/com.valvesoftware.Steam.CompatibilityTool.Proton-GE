id: com.valvesoftware.Steam.CompatibilityTool.Proton-GE
default-branch: stable
runtime: com.valvesoftware.Steam
runtime-version: stable
sdk: org.freedesktop.Sdk//22.08
build-extension: true
appstream-compose: false

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.mingw-w64

build-options:
  prefix: /app/share/steam/compatibilitytools.d/Proton-GE
  append-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
  ldflags: -L/app/share/steam/compatibilitytools.d/Proton-GE/lib
  env:
    C_INCLUDE_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/include:/app/include
    CPLUS_INCLUDE_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/include:/app/include
    PKG_CONFIG_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/lib/pkgconfig:/app/lib/pkgconfig:/app/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
    LD_RUN_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/lib
    PYTHONPATH: /app/share/steam/compatibilitytools.d/Proton-GE/lib/python3.10/site-packages
    FLATPAK_LIBDIR: /app/share/steam/compatibilitytools.d/Proton-GE/lib
    FLATPAK_LIBDIR_WINE: /app/share/steam/compatibilitytools.d/Proton-GE/lib/wine
    FLATPAK_LIBDIR_WINE_ELF: /app/share/steam/compatibilitytools.d/Proton-GE/lib/wine/x86_64-unix
    FLATPAK_LIBDIR_WINE_PE: /app/share/steam/compatibilitytools.d/Proton-GE/lib/wine/x86_64-windows
  cflags: &optflags -O2 -pipe -march=nocona -mtune=core-avx2 -mfpmath=sse -fwrapv
    -fno-strict-aliasing -mcmodel=small
  cflags-override: true
  cxxflags: *optflags
  cxxflags-override: true

x-compat-i386-opts: &compat_i386_opts
  ldflags: -L/app/share/steam/compatibilitytools.d/Proton-GE/lib32 -L/app/lib32
  prepend-path: /app/share/steam/compatibilitytools.d/Proton-GE/bin32
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: ccache i686-unknown-linux-gnu-gcc
    CXX: ccache i686-unknown-linux-gnu-g++
    PKG_CONFIG_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/lib32/pkgconfig:/app/lib32/pkgconfig:/app/share/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig:/usr/share/pkgconfig
    LD_RUN_PATH: /app/share/steam/compatibilitytools.d/Proton-GE/lib32
    FLATPAK_LIBDIR: /app/share/steam/compatibilitytools.d/Proton-GE/lib32
    FLATPAK_LIBDIR_WINE: /app/share/steam/compatibilitytools.d/Proton-GE/lib32/wine
    FLATPAK_LIBDIR_WINE_ELF: /app/share/steam/compatibilitytools.d/Proton-GE/lib32/wine/i386-unix
    FLATPAK_LIBDIR_WINE_PE: &lib32_wine_pe /app/share/steam/compatibilitytools.d/Proton-GE/lib32/wine/i386-windows
  libdir: /app/share/steam/compatibilitytools.d/Proton-GE/lib32
  cflags: &optflags32 -O2 -pipe -march=nocona -mtune=core-avx2 -mfpmath=sse -fwrapv
    -fno-strict-aliasing -mstackrealign
  cflags-override: true
  cxxflags: *optflags32
  cxxflags-override: true

x-proton-source: &proton_source files/proton/source.yaml

cleanup:
  - '*.a'
  - '*.la'
  - /include
  - /lib/pkgconfig
  - /lib32/pkgconfig
  - /lib/cmake
  - /lib32/cmake
  - /share/man

  - /bin/function_grep.pl
  - /bin/widl
  - /bin/winebuild
  - /bin/winecpp
  - /bin/winedump
  - /bin/wineg++
  - /bin/winegcc
  - /bin/winemaker
  - /bin/wmc
  - /bin/wrc

  - /lib/wine/*.def
  - /lib32/wine/*.def
modules:
  - name: Vulkan-Headers
    subdir: Vulkan-Headers
    buildsystem: cmake-ninja
    sources:
      - *proton_source


  - name: SPIRV-Headers
    subdir: SPIRV-Headers
    buildsystem: cmake-ninja
    sources:
      - *proton_source


  - name: vkd3d-d3d12
    subdir: vkd3d
    build-options:
      arch:
        x86_64:
          env:
            WIDL: x86_64-w64-mingw32-widl
    config-opts: &vkd3d-config-opts
      - --disable-doxygen-doc
      - --disable-tests
      - --disable-demos
      - --without-ncurses
    sources:
      - *proton_source

  - name: vkd3d-d3d12-32bit
    subdir: vkd3d
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      env:
        WIDL: i686-w64-mingw32-widl
    config-opts: *vkd3d-config-opts
    sources:
      - *proton_source


  - name: wine
    subdir: wine
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
            - --with-mingw=ccache x86_64-w64-mingw32-gcc
          libdir: /app/share/steam/compatibilitytools.d/Proton-GE/lib
    config-opts: &wine_common_opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
      - --without-oss
    make-install-args: &wine_common_make_install_args
      - LDCONFIG=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
      - INSTALL_PROGRAM_FLAGS=-s
    sources: &wine_sources
      - *proton_source
      - type: shell
        dest: wine
        commands:
          - autoreconf -fiv
      - &wine-source-winevulkan
        type: shell
        dest: wine
        commands:
          - tools/make_requests
          - dlls/winevulkan/make_vulkan --verbose --xml vk.xml

  - name: wine-32bit
    subdir: wine
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --bindir=/app/share/steam/compatibilitytools.d/Proton-GE/bin32
        - --with-mingw=ccache i686-w64-mingw32-gcc
    config-opts: *wine_common_opts
    make-install-args: *wine_common_make_install_args
    post-install:
      - mv $FLATPAK_DEST/bin32/{wine,wine-preloader} $FLATPAK_DEST/bin/
    cleanup:
      - /bin32
    sources: *wine_sources


  - name: lsteamclient
    subdir: lsteamclient
    config-opts: &lsteamclient_config_opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../wine/include
      - -DSTEAM_API_EXPORTS
      - -Dprivate=public
      - -Dprotected=public
      - --dll
      - .
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E lsteamclient.spec -o lsteamclient.dll.fake
    no-make-install: true
    post-install: &lsteamclient-post-install
      - install -Dm755 lsteamclient.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/lsteamclient.dll.so
      - install -Dm755 lsteamclient.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/lsteamclient.dll
    sources: &lsteamclient_sources
      - *proton_source
      - type: file
        path: winemaker-configure.sh
        dest: lsteamclient
        dest-filename: configure

  - name: lsteamclient-32bit
    subdir: lsteamclient
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      cxxflags: -Wno-attributes
      config-opts:
        - --wine32
      make-args: &winemaker_m32_make_args
        - CC=winegcc -m32
        - CXX=wineg++ -m32
    config-opts: *lsteamclient_config_opts
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E lsteamclient.spec -o lsteamclient.dll.fake
    no-make-install: true
    post-install: *lsteamclient-post-install
    sources: *lsteamclient_sources


  - name: libsteam_api-bin
    #WARNING proprietary
    build-options:
      strip: false
      no-debuginfo: true
    subdir: steam_helper
    buildsystem: simple
    build-commands:
      - install -Dm755 64/libsteam_api.so -t ${FLATPAK_DEST}/lib/
      - install -Dm755 32/libsteam_api.so -t ${FLATPAK_DEST}/lib32/
    sources:
      - *proton_source


  - name: steam_helper
    subdir: steam_helper
    config-opts: &steam_helper-config-opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../lsteamclient/steamworks_sdk_142
      - -I../wine/include
      - -I../openvr/headers
      - -lsteam_api
      - -lshlwapi
      - -lmsi
      - -lole32
      - -ldl
      - --guiexe
      - .
    build-commands: &steam_helper-build-commands
      - winebuild --exe --fake-module -F steam -o steam.exe.fake
    no-make-install: true
    post-install: &steam_helper-post-install
      - install -Dm755 steam_helper.exe.so ${FLATPAK_LIBDIR_WINE_ELF}/steam.exe.so
      - install -Dm755 steam.exe.fake ${FLATPAK_LIBDIR_WINE_PE}/steam.exe
    sources: &steam_helper-sources
      - *proton_source
      - *wine-source-winevulkan
      - type: file
        path: winemaker-configure.sh
        dest: steam_helper
        dest-filename: configure

  - name: steam_helper-32bit
    subdir: steam_helper
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --wine32
      make-args: *winemaker_m32_make_args
    config-opts: *steam_helper-config-opts
    build-commands: *steam_helper-build-commands
    no-make-install: true
    post-install: *steam_helper-post-install
    sources: *steam_helper-sources


  - name: openvr
    subdir: openvr
    buildsystem: simple
    build-commands:
      - install -Dm755 bin/win64/openvr_api.dll ${FLATPAK_DEST}/lib/wine/dxvk/openvr_api_dxvk.dll
      - install -Dm755 bin/win32/openvr_api.dll ${FLATPAK_DEST}/lib32/wine/dxvk/openvr_api_dxvk.dll
    sources:
      - *proton_source


  - name: vrclient
    subdir: vrclient_x64/vrclient_x64
    config-opts: &vrclient_config_opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I.
      - -I..
      - --dll
      - .
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/vrclient_x64.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/vrclient_x64.dll
    sources: &vrclient_sources
      - *proton_source
      - type: file
        path: winemaker-configure.sh
        dest: vrclient_x64/vrclient_x64
        dest-filename: configure

  - name: vrclient-32bit
    subdir: vrclient_x64/vrclient_x64
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --wine32
      make-args: *winemaker_m32_make_args
    make-args:
      - LIBRARIES=-ldl
    config-opts: *vrclient_config_opts
    build-commands:
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/vrclient.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/vrclient.dll
    sources: *vrclient_sources


  - name: wineopenxr
    subdir: wineopenxr
    config-opts:
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../wine/include
      - -lopenxr_loader
      - -ldxgi
      - -lvulkan
      - --dll
      - .
    build-commands:
      - winebuild --dll --fake-module -E wineopenxr.spec -o wineopenxr.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 wineopenxr.dll.so -t ${FLATPAK_LIBDIR_WINE_ELF}/
      - install -Dm755 wineopenxr.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/wineopenxr.dll
    sources:
      - *proton_source
      - *wine-source-winevulkan
      - type: file
        path: winemaker-configure.sh
        dest: wineopenxr
        dest-filename: configure
    modules:

      - name: openxr
        subdir: OpenXR-SDK
        buildsystem: cmake-ninja
        config-opts:
          # FIXME: Make a proper patch instead to build with std::filesystem
          - -DBUILD_WITH_STD_FILESYSTEM=OFF
        sources:
          - *proton_source


  - name: glslang
    subdir: glslang
    buildsystem: cmake-ninja
    cleanup:
      - '*'
    sources:
      - *proton_source


# TODO: build vkd3d against cross-compiled Vulkan-Loader instead of Wine vulkan lib

  - name: vkd3d
    subdir: vkd3d
    build-options:
      arch:
        x86_64:
          env:
            WIDL: x86_64-w64-mingw32-widl
      ldflags: >-
        -L/run/build/vkd3d/wine/dlls/vulkan-1
      ldflags-override: true
      config-opts:
        - --host=x86_64-w64-mingw32
      env:
        CC: ccache x86_64-w64-mingw32-gcc
        LD: x86_64-w64-mingw32-ld
      prefix: /app/share/steam/compatibilitytools.d/Proton-GE/lib/vkd3d/prefix
    config-opts: *vkd3d-config-opts
    post-install:
      - mv -v ${FLATPAK_DEST}/lib/vkd3d/{prefix/bin/,}libvkd3d-shader-1.dll
    sources: &vkd3d-sources
      - *proton_source
      - type: shell
        commands:
          - install -D $FLATPAK_LIBDIR_WINE_PE/vulkan-1.dll -t wine/dlls/vulkan-1/
    cleanup:
      - /lib/vkd3d/prefix

  - name: vkd3d-32bit
    subdir: vkd3d
    build-options:
      ldflags: >-
        -L/run/build/vkd3d-32bit/wine/dlls/vulkan-1
      ldflags-override: true
      config-opts:
        - --host=i686-w64-mingw32
      env:
        CC: ccache i686-w64-mingw32-gcc
        LD: i686-w64-mingw32-ld
        # XXX: build-options.arch.*.env overrides build-options.env
        # so we can't easily use compat_i386_opts anchor here
        FLATPAK_LIBDIR_WINE_PE: *lib32_wine_pe
        WIDL: i686-w64-mingw32-widl
      prefix: /app/share/steam/compatibilitytools.d/Proton-GE/lib32/vkd3d/prefix
    config-opts: *vkd3d-config-opts
    post-install:
      - mv -v ${FLATPAK_DEST}/lib32/vkd3d/{prefix/bin/,}libvkd3d-shader-1.dll
    sources: *vkd3d-sources
    cleanup:
      - /lib32/vkd3d/prefix


  - name: vkd3d-proton
    subdir: vkd3d-proton
    buildsystem: meson
    build-options:
      ldflags: &mingw-ldflags ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/vkd3d-proton
        - --bindir=lib/wine/vkd3d-proton
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: &vkd3d-proton-config-opts
      - --buildtype=release
      - --strip
    post-install:
      - |
        cd ${FLATPAK_DEST}/lib/wine/vkd3d-proton
        sha1sum d3d12.dll > version
    sources: &vkd3d-proton-sources
      - *proton_source
      - type: patch
        dest: vkd3d-proton
        paths:
          - patches/vkd3d-proton/build-number-no-git.patch
      - type: file
        dest: vkd3d-proton
        path: meson-ccache-mingw32.txt
      - type: file
        dest: vkd3d-proton
        path: meson-ccache-mingw64.txt

  - name: vkd3d-proton-32bit
    subdir: vkd3d-proton
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/vkd3d-proton
        - --bindir=lib32/wine/vkd3d-proton
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: *vkd3d-proton-config-opts
    post-install:
      - ln -sr ${FLATPAK_DEST}/lib{,32}/wine/vkd3d-proton/version
    sources: *vkd3d-proton-sources


  - name: dxvk
    subdir: dxvk
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/dxvk
        - --bindir=lib/wine/dxvk
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: &dxvk_config_opts
      - --buildtype=release
      - --strip
      - -Denable_dxgi=true
      - -Denable_d3d9=true
      - -Denable_d3d10=true
      - -Denable_d3d11=true
    post-install:
      - |
        cd ${FLATPAK_DEST}/lib/wine/dxvk
        sha1sum d3d11.dll > version
    sources: &dxvk_sources
      - *proton_source
      - type: file
        dest: dxvk
        path: meson-ccache-mingw32.txt
      - type: file
        dest: dxvk
        path: meson-ccache-mingw64.txt

  - name: dxvk-32bit
    subdir: dxvk
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/dxvk
        - --bindir=lib32/wine/dxvk
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: *dxvk_config_opts
    post-install:
      - ln -sr ${FLATPAK_DEST}/lib{,32}/wine/dxvk/version
    sources: *dxvk_sources


  - name: dxvk-nvapi
    subdir: dxvk-nvapi
    buildsystem: meson
    build-options:
      ldflags: ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/nvapi
        - --bindir=lib/wine/nvapi
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: &dxvk_nvapi_config_opts
      - --buildtype=release
      - --strip
    post-install:
      - install -Dm644 ../VERSION ${FLATPAK_DEST}/lib/wine/nvapi/version
    sources: &dxvk_nvapi_sources
      - *proton_source
      - type: file
        dest: dxvk-nvapi
        path: meson-ccache-mingw32.txt
      - type: file
        dest: dxvk-nvapi
        path: meson-ccache-mingw64.txt

  - name: dxvk-nvapi-32bit
    subdir: dxvk-nvapi
    buildsystem: meson
    build-options:
      ldflags: ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/nvapi
        - --bindir=lib32/wine/nvapi
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-GE/bin
    config-opts: *dxvk_nvapi_config_opts
    post-install:
      - install -Dm644 ../VERSION ${FLATPAK_DEST}/lib32/wine/nvapi/version
    sources: *dxvk_nvapi_sources


  - name: wine-mono-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/mono
      - cp -a wine-mono-*/ ${FLATPAK_DEST}/share/wine/mono/
    sources:
      - type: archive
        url: https://github.com/madewokherd/wine-mono/releases/download/wine-mono-7.4.0/wine-mono-7.4.0-x86.tar.xz
        sha256: 9249ece664bcf2fecb1308ea1d2542c72923df9fe3df891986f137b2266a9ba3
        strip-components: 0


  - name: wine-gecko-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/gecko
      - |
        for a in wine-gecko-*-x86{,_64}.tar.xz; do
          tar -xf "$a" -C ${FLATPAK_DEST}/share/wine/gecko/
        done
    sources:
      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.3/wine-gecko-2.47.3-x86.tar.xz
        sha256: 08d318f3dd6440a8a777cf044ccab039b0d9c8809991d2180eb3c9f903135db3
      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.3/wine-gecko-2.47.3-x86_64.tar.xz
        sha256: 0beac419c20ee2e68a1227b6e3fa8d59fec0274ed5e82d0da38613184716ef75


  - name: fonts
    buildsystem: simple
    build-commands:
      - |
        cat <<EOF > Makefile
        SRCDIR     := $(pwd)
        BUILD_NAME := proton-flatpak
        include \$(SRCDIR)/Makefile.in
        EOF
      - make fonts
      - find obj-fonts/ -xtype f \( -name "*.otf" -o -name "*.ttf" \) -ls -exec install
        -Dm0644 -t ${FLATPAK_DEST}/share/fonts/ {} \;
    sources:
      - *proton_source
    modules:
      - name: fontforge
        buildsystem: cmake-ninja
        builddir: true
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DBUILD_SHARED_LIBS=OFF
          - -DENABLE_GUI=OFF
          - -DENABLE_NATIVE_SCRIPTING=ON
          - -DENABLE_PYTHON_SCRIPTING=OFF
          - -DENABLE_PYTHON_EXTENSION=OFF
          - -DENABLE_LIBSPIRO=OFF
          - -DENABLE_LIBUNINAMESLIST=OFF
          - -DENABLE_LIBGIF=OFF
          - -DENABLE_LIBJPEG=OFF
          - -DENABLE_LIBPNG=OFF
          - -DENABLE_LIBREADLINE=OFF
          - -DENABLE_LIBTIFF=OFF
          - -DENABLE_WOFF2=OFF
          - -DENABLE_DOCS=OFF
        cleanup:
          - '*'
        sources:
          - type: archive
            url: https://github.com/fontforge/fontforge/releases/download/20201107/fontforge-20201107.tar.xz
            sha256: 68bcba8f602819eddc29cd356ee13fafbad7a80d19b652d354c6791343476c78
      - files/afdko/afdko.json

      - name: afdko-script
        buildsystem: simple
        build-commands:
          - install -Dm755 -t ${FLATPAK_DEST}/bin afdko
        cleanup:
          - '*'
        sources:
          - type: script
            dest-filename: afdko
            commands:
              - exec "$@"

      - name: rsync
        config-opts:
          - --disable-xxhash
        cleanup:
          - '*'
        sources:
          - type: archive
            url: https://www.samba.org/ftp/rsync/src/rsync-3.2.3.tar.gz
            sha256: becc3c504ceea499f4167a260040ccf4d9f2ef9499ad5683c179a697146ce50e


  - name: protonfixes
    buildsystem: simple
    build-commands:
      - |
        cp -a \
          protonfixes \
        ${FLATPAK_DEST}
    sources:
      - *proton_source


  - name: default-prefix
    build-options:
      env:
        WINEPREFIX: /app/share/steam/compatibilitytools.d/Proton-GE/share/default_pfx
        LC_ALL: C
    buildsystem: simple
    build-commands:
      #FIXME unclever way to wait for all child procs
      - strace -e trace=none -f wine wineboot
    post-install:
      - install -Dm644 wineopenxr/wineopenxr64.json ${WINEPREFIX}/drive_c/openxr/wineopenxr64.json
    sources:
      - *proton_source


  - name: proton
    buildsystem: simple
    build-commands:
      - install -Dm755 -t ${FLATPAK_DEST}/ proton filelock.py user_settings.sample.py
      - install -Dm644 -t ${FLATPAK_DEST}/ compatibilitytool.vdf proton_3.7_tracked_files
      - install -Dm644 toolmanifest_noruntime.vdf ${FLATPAK_DEST}/toolmanifest.vdf
      - install -Dm644 dist.LICENSE ${FLATPAK_DEST}/LICENSE
      - |
        set -e -o pipefail
        PROTON_VERSION=$(cat VERSION)
        TIMESTAMP=$(date +%s)
        echo ${TIMESTAMP} proton_flatpak-${PROTON_VERSION} > ${FLATPAK_DEST}/version
        sed \
          -e "s/@VERSION@/${PROTON_VERSION}/g" \
          -e "s/@BUILD@/${TIMESTAMP}/g" \
          -i ${FLATPAK_DEST}/compatibilitytool.vdf
      - |
        cd ${FLATPAK_DEST}
        mkdir dist
        ln -s ../bin dist/bin
        ln -s ../lib dist/lib64
        ln -s ../lib32 dist/lib
        ln -s ../share dist/share
        ln -s ../version dist/version
      - install -Dm644 -t ${FLATPAK_DEST}/share/metainfo ${FLATPAK_ID}.metainfo.xml
      - appstream-compose --basename=${FLATPAK_ID} --prefix=${FLATPAK_DEST} --origin=flatpak
        ${FLATPAK_ID}
    sources:
      - *proton_source
      - type: patch
        paths:
          - patches/proton/flatpak.patch
      - type: file
        path: compatibilitytool.vdf
      - type: file
        path: com.valvesoftware.Steam.CompatibilityTool.Proton-GE.metainfo.xml
